-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_optimized is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_ap_vld : OUT STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fir_optimized is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir_optimized_fir_optimized,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.923000,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5332,HLS_SYN_LUT=3364,HLS_VERSION=2025_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_FFFFFF0A : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111100001010";
    constant ap_const_lv32_FFFFFF8E : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110001110";
    constant ap_const_lv32_FFFFFC78 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110001111000";
    constant ap_const_lv32_FFFFFAC3 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111101011000011";
    constant ap_const_lv32_FFFFFED9 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111011011001";
    constant ap_const_lv32_FFFFFE3B : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111000111011";
    constant ap_const_lv32_FFFFFDC7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110111000111";
    constant ap_const_lv32_FFFFFA50 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111101001010000";
    constant ap_const_lv32_FFFFFFAC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110101100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_ZZ13fir_optimizedPiiE9shift_reg_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZZ13fir_optimizedPiiE9shift_reg_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal fir_optimized_int_int_shift_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln49_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_reg_1315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln49_1_fu_686_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_1_reg_1320 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_1_reg_1320_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_1_reg_1320_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_2_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_2_reg_1329 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_2_reg_1329_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_3_fu_698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_3_reg_1335 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_4_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_4_reg_1341 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_4_reg_1341_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_4_reg_1341_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_5_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_5_reg_1347 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_6_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_6_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_7_fu_722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_7_reg_1357 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_7_reg_1357_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_8_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_8_reg_1362 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_9_fu_734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_9_reg_1367 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_10_fu_740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_10_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_10_reg_1372_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_11_fu_746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_11_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_11_reg_1382_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_12_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_12_reg_1389 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_13_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_13_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_13_reg_1397_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_4_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_4_reg_1405 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_15_fu_800_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_15_reg_1410 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_17_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_17_reg_1416 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_18_fu_818_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_18_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_18_reg_1422_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_19_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_19_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_19_reg_1427_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_19_reg_1427_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_20_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_20_reg_1433 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_21_fu_836_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_21_reg_1438 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_22_fu_842_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_22_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_22_reg_1443_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_54_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_54_reg_1449 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_54_reg_1449_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_16_fu_890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_16_reg_1454 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_5_fu_911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_5_reg_1459 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_48_fu_949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_48_reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_52_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_52_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_25_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_25_reg_1474 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_reg_1479 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_2_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_2_reg_1484 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_1_reg_1489 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_reg_1494 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_190_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_4_reg_1499 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_reg_1504 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_8_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_8_reg_1509 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_50_fu_1120_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_50_reg_1514 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_53_fu_1153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_53_reg_1519 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_7_reg_1524 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_8_reg_1529 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_21_fu_1174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_21_reg_1534 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_26_fu_1184_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_26_reg_1539 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_26_reg_1539_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_26_reg_1539_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_26_reg_1539_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_33_fu_1189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_33_reg_1544 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_3_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_reg_1554 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_27_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_27_reg_1559 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_30_fu_1245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_30_reg_1564 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_34_fu_1250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_34_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_34_reg_1569_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_36_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_36_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_36_reg_1574_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_38_fu_1265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_38_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_41_fu_1273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_41_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_31_fu_1282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_31_reg_1589 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_31_reg_1589_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_42_fu_1291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_42_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_43_fu_1300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_43_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_175_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_180_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_185_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_190_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_195_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_205_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln49_6_fu_764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_7_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_3_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_8_fu_782_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_14_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_27_fu_848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_28_fu_854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_13_fu_860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_16_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_31_fu_872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_32_fu_878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_15_fu_884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_9_fu_896_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_46_fu_901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_10_fu_906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_13_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_14_fu_922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_7_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_15_fu_933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_47_fu_938_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_16_fu_944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_21_fu_955_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_22_fu_960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_10_fu_965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_23_fu_971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_51_fu_976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_29_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_30_fu_992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_33_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_34_fu_1008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_17_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_24_fu_1019_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_14_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_fu_1030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_1_fu_1035_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_fu_1040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_2_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_1_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_3_fu_1057_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_4_fu_1068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_5_fu_1073_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_17_fu_1084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_49_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_18_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_19_fu_1104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_9_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_20_fu_1115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_24_fu_1126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_25_fu_1131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_11_fu_1136_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_26_fu_1142_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_12_fu_1147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_37_fu_1158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_20_fu_1163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_38_fu_1169_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_23_fu_1180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_45_fu_1078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_11_fu_1198_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_12_fu_1203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_35_fu_1214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_18_fu_1219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln49_36_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_19_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_29_fu_1241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_44_fu_1194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_35_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln49_6_fu_1208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_40_fu_1269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_28_fu_1278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_39_fu_1287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_37_fu_1296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_32_fu_1305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fir_optimized_mul_32s_9s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir_optimized_mul_32s_8s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir_optimized_mul_32s_11s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir_optimized_mul_32s_12s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir_optimized_mul_32s_10s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_32s_9s_32_2_1_U1 : component fir_optimized_mul_32s_9s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 9,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_reg_1315,
        din1 => grp_fu_175_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_175_p2);

    mul_32s_8s_32_2_1_U2 : component fir_optimized_mul_32s_8s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_5_reg_1347,
        din1 => grp_fu_180_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_180_p2);

    mul_32s_11s_32_2_1_U3 : component fir_optimized_mul_32s_11s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_6_reg_1352,
        din1 => grp_fu_185_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_185_p2);

    mul_32s_12s_32_2_1_U4 : component fir_optimized_mul_32s_12s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_8_reg_1362,
        din1 => grp_fu_190_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_190_p2);

    mul_32s_10s_32_2_1_U5 : component fir_optimized_mul_32s_10s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 10,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_9_reg_1367,
        din1 => grp_fu_195_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_195_p2);

    mul_32s_10s_32_2_1_U6 : component fir_optimized_mul_32s_10s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 10,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_20_reg_1433,
        din1 => grp_fu_200_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_200_p2);

    mul_32s_11s_32_2_1_U7 : component fir_optimized_mul_32s_11s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_21_reg_1438,
        din1 => grp_fu_205_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_205_p2);

    mul_32s_12s_32_2_1_U8 : component fir_optimized_mul_32s_12s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_7_reg_1357_pp0_iter1_reg,
        din1 => grp_fu_210_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_210_p2);

    mul_32s_8s_32_2_1_U9 : component fir_optimized_mul_32s_8s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln49_18_reg_1422_pp0_iter1_reg,
        din1 => grp_fu_215_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_215_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln49_10_reg_1372 <= add_ln49_10_fu_740_p2;
                add_ln49_10_reg_1372_pp0_iter1_reg <= add_ln49_10_reg_1372;
                add_ln49_11_reg_1382 <= add_ln49_11_fu_746_p2;
                add_ln49_11_reg_1382_pp0_iter1_reg <= add_ln49_11_reg_1382;
                add_ln49_12_reg_1389 <= add_ln49_12_fu_752_p2;
                add_ln49_13_reg_1397 <= add_ln49_13_fu_758_p2;
                add_ln49_13_reg_1397_pp0_iter1_reg <= add_ln49_13_reg_1397;
                add_ln49_15_reg_1410 <= add_ln49_15_fu_800_p2;
                add_ln49_17_reg_1416 <= add_ln49_17_fu_812_p2;
                add_ln49_18_reg_1422 <= add_ln49_18_fu_818_p2;
                add_ln49_18_reg_1422_pp0_iter1_reg <= add_ln49_18_reg_1422;
                add_ln49_19_reg_1427 <= add_ln49_19_fu_824_p2;
                add_ln49_19_reg_1427_pp0_iter1_reg <= add_ln49_19_reg_1427;
                add_ln49_1_reg_1320 <= add_ln49_1_fu_686_p2;
                add_ln49_1_reg_1320_pp0_iter1_reg <= add_ln49_1_reg_1320;
                add_ln49_20_reg_1433 <= add_ln49_20_fu_830_p2;
                add_ln49_21_reg_1438 <= add_ln49_21_fu_836_p2;
                add_ln49_22_reg_1443 <= add_ln49_22_fu_842_p2;
                add_ln49_22_reg_1443_pp0_iter1_reg <= add_ln49_22_reg_1443;
                add_ln49_25_reg_1474 <= add_ln49_25_fu_1024_p2;
                add_ln49_2_reg_1329 <= add_ln49_2_fu_692_p2;
                add_ln49_2_reg_1329_pp0_iter1_reg <= add_ln49_2_reg_1329;
                add_ln49_3_reg_1335 <= add_ln49_3_fu_698_p2;
                add_ln49_48_reg_1464 <= add_ln49_48_fu_949_p2;
                add_ln49_4_reg_1341 <= add_ln49_4_fu_704_p2;
                add_ln49_4_reg_1341_pp0_iter1_reg <= add_ln49_4_reg_1341;
                add_ln49_52_reg_1469 <= add_ln49_52_fu_982_p2;
                add_ln49_54_reg_1449 <= add_ln49_54_fu_866_p2;
                add_ln49_54_reg_1449_pp0_iter1_reg <= add_ln49_54_reg_1449;
                add_ln49_5_reg_1347 <= add_ln49_5_fu_710_p2;
                add_ln49_6_reg_1352 <= add_ln49_6_fu_716_p2;
                add_ln49_7_reg_1357 <= add_ln49_7_fu_722_p2;
                add_ln49_7_reg_1357_pp0_iter1_reg <= add_ln49_7_reg_1357;
                add_ln49_8_reg_1362 <= add_ln49_8_fu_728_p2;
                add_ln49_9_reg_1367 <= add_ln49_9_fu_734_p2;
                add_ln49_reg_1315 <= add_ln49_fu_680_p2;
                sub_ln49_16_reg_1454 <= sub_ln49_16_fu_890_p2;
                sub_ln49_4_reg_1405 <= sub_ln49_4_fu_788_p2;
                sub_ln49_5_reg_1459 <= sub_ln49_5_fu_911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln49_19_reg_1427_pp0_iter2_reg <= add_ln49_19_reg_1427_pp0_iter1_reg;
                add_ln49_1_reg_1320_pp0_iter2_reg <= add_ln49_1_reg_1320_pp0_iter1_reg;
                add_ln49_26_reg_1539 <= add_ln49_26_fu_1184_p2;
                add_ln49_26_reg_1539_pp0_iter3_reg <= add_ln49_26_reg_1539;
                add_ln49_26_reg_1539_pp0_iter4_reg <= add_ln49_26_reg_1539_pp0_iter3_reg;
                add_ln49_26_reg_1539_pp0_iter5_reg <= add_ln49_26_reg_1539_pp0_iter4_reg;
                add_ln49_27_reg_1559 <= add_ln49_27_fu_1236_p2;
                add_ln49_30_reg_1564 <= add_ln49_30_fu_1245_p2;
                add_ln49_31_reg_1589 <= add_ln49_31_fu_1282_p2;
                add_ln49_31_reg_1589_pp0_iter5_reg <= add_ln49_31_reg_1589;
                add_ln49_33_reg_1544 <= add_ln49_33_fu_1189_p2;
                add_ln49_34_reg_1569 <= add_ln49_34_fu_1250_p2;
                add_ln49_34_reg_1569_pp0_iter4_reg <= add_ln49_34_reg_1569;
                add_ln49_36_reg_1574 <= add_ln49_36_fu_1259_p2;
                add_ln49_36_reg_1574_pp0_iter4_reg <= add_ln49_36_reg_1574;
                add_ln49_38_reg_1579 <= add_ln49_38_fu_1265_p2;
                add_ln49_41_reg_1584 <= add_ln49_41_fu_1273_p2;
                add_ln49_42_reg_1594 <= add_ln49_42_fu_1291_p2;
                add_ln49_43_reg_1599 <= add_ln49_43_fu_1300_p2;
                add_ln49_4_reg_1341_pp0_iter2_reg <= add_ln49_4_reg_1341_pp0_iter1_reg;
                add_ln49_50_reg_1514 <= add_ln49_50_fu_1120_p2;
                add_ln49_53_reg_1519 <= add_ln49_53_fu_1153_p2;
                mul_ln49_1_reg_1489 <= grp_fu_180_p2;
                mul_ln49_2_reg_1494 <= grp_fu_185_p2;
                mul_ln49_3_reg_1549 <= grp_fu_210_p2;
                mul_ln49_4_reg_1499 <= grp_fu_190_p2;
                mul_ln49_5_reg_1504 <= grp_fu_195_p2;
                mul_ln49_6_reg_1554 <= grp_fu_215_p2;
                mul_ln49_7_reg_1524 <= grp_fu_200_p2;
                mul_ln49_8_reg_1529 <= grp_fu_205_p2;
                mul_ln49_reg_1479 <= grp_fu_175_p2;
                sub_ln49_21_reg_1534 <= sub_ln49_21_fu_1174_p2;
                sub_ln49_2_reg_1484 <= sub_ln49_2_fu_1062_p2;
                sub_ln49_8_reg_1509 <= sub_ln49_8_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                fir_optimized_int_int_shift_reg <= input_r;
                fir_optimized_int_int_shift_reg_1 <= fir_optimized_int_int_shift_reg;
                fir_optimized_int_int_shift_reg_2 <= fir_optimized_int_int_shift_reg_1;
                fir_optimized_int_int_shift_reg_3 <= fir_optimized_int_int_shift_reg_2;
                fir_optimized_int_int_shift_reg_4 <= fir_optimized_int_int_shift_reg_3;
                fir_optimized_int_int_shift_reg_5 <= fir_optimized_int_int_shift_reg_4;
                fir_optimized_int_int_shift_reg_6 <= fir_optimized_int_int_shift_reg_5;
                fir_optimized_int_int_shift_reg_7 <= fir_optimized_int_int_shift_reg_6;
                fir_optimized_int_int_shift_reg_8 <= fir_optimized_int_int_shift_reg_7;
                fir_optimized_int_int_shift_reg_9 <= fir_optimized_int_int_shift_reg_8;
                p_ZZ13fir_optimizedPiiE9shift_reg_10 <= fir_optimized_int_int_shift_reg_9;
                p_ZZ13fir_optimizedPiiE9shift_reg_11 <= p_ZZ13fir_optimizedPiiE9shift_reg_10;
                p_ZZ13fir_optimizedPiiE9shift_reg_12 <= p_ZZ13fir_optimizedPiiE9shift_reg_11;
                p_ZZ13fir_optimizedPiiE9shift_reg_13 <= p_ZZ13fir_optimizedPiiE9shift_reg_12;
                p_ZZ13fir_optimizedPiiE9shift_reg_14 <= p_ZZ13fir_optimizedPiiE9shift_reg_13;
                p_ZZ13fir_optimizedPiiE9shift_reg_15 <= p_ZZ13fir_optimizedPiiE9shift_reg_14;
                p_ZZ13fir_optimizedPiiE9shift_reg_16 <= p_ZZ13fir_optimizedPiiE9shift_reg_15;
                p_ZZ13fir_optimizedPiiE9shift_reg_17 <= p_ZZ13fir_optimizedPiiE9shift_reg_16;
                p_ZZ13fir_optimizedPiiE9shift_reg_18 <= p_ZZ13fir_optimizedPiiE9shift_reg_17;
                p_ZZ13fir_optimizedPiiE9shift_reg_19 <= p_ZZ13fir_optimizedPiiE9shift_reg_18;
                p_ZZ13fir_optimizedPiiE9shift_reg_20 <= p_ZZ13fir_optimizedPiiE9shift_reg_19;
                p_ZZ13fir_optimizedPiiE9shift_reg_21 <= p_ZZ13fir_optimizedPiiE9shift_reg_20;
                p_ZZ13fir_optimizedPiiE9shift_reg_22 <= p_ZZ13fir_optimizedPiiE9shift_reg_21;
                p_ZZ13fir_optimizedPiiE9shift_reg_23 <= p_ZZ13fir_optimizedPiiE9shift_reg_22;
                p_ZZ13fir_optimizedPiiE9shift_reg_24 <= p_ZZ13fir_optimizedPiiE9shift_reg_23;
                p_ZZ13fir_optimizedPiiE9shift_reg_25 <= p_ZZ13fir_optimizedPiiE9shift_reg_24;
                p_ZZ13fir_optimizedPiiE9shift_reg_26 <= p_ZZ13fir_optimizedPiiE9shift_reg_25;
                p_ZZ13fir_optimizedPiiE9shift_reg_27 <= p_ZZ13fir_optimizedPiiE9shift_reg_26;
                p_ZZ13fir_optimizedPiiE9shift_reg_28 <= p_ZZ13fir_optimizedPiiE9shift_reg_27;
                p_ZZ13fir_optimizedPiiE9shift_reg_29 <= p_ZZ13fir_optimizedPiiE9shift_reg_28;
                p_ZZ13fir_optimizedPiiE9shift_reg_30 <= p_ZZ13fir_optimizedPiiE9shift_reg_29;
                p_ZZ13fir_optimizedPiiE9shift_reg_31 <= p_ZZ13fir_optimizedPiiE9shift_reg_30;
                p_ZZ13fir_optimizedPiiE9shift_reg_32 <= p_ZZ13fir_optimizedPiiE9shift_reg_31;
                p_ZZ13fir_optimizedPiiE9shift_reg_33 <= p_ZZ13fir_optimizedPiiE9shift_reg_32;
                p_ZZ13fir_optimizedPiiE9shift_reg_34 <= p_ZZ13fir_optimizedPiiE9shift_reg_33;
                p_ZZ13fir_optimizedPiiE9shift_reg_35 <= p_ZZ13fir_optimizedPiiE9shift_reg_34;
                p_ZZ13fir_optimizedPiiE9shift_reg_36 <= p_ZZ13fir_optimizedPiiE9shift_reg_35;
                p_ZZ13fir_optimizedPiiE9shift_reg_37 <= p_ZZ13fir_optimizedPiiE9shift_reg_36;
                p_ZZ13fir_optimizedPiiE9shift_reg_38 <= p_ZZ13fir_optimizedPiiE9shift_reg_37;
                p_ZZ13fir_optimizedPiiE9shift_reg_39 <= p_ZZ13fir_optimizedPiiE9shift_reg_38;
                p_ZZ13fir_optimizedPiiE9shift_reg_40 <= p_ZZ13fir_optimizedPiiE9shift_reg_39;
                p_ZZ13fir_optimizedPiiE9shift_reg_41 <= p_ZZ13fir_optimizedPiiE9shift_reg_40;
                p_ZZ13fir_optimizedPiiE9shift_reg_42 <= p_ZZ13fir_optimizedPiiE9shift_reg_41;
                p_ZZ13fir_optimizedPiiE9shift_reg_43 <= p_ZZ13fir_optimizedPiiE9shift_reg_42;
                p_ZZ13fir_optimizedPiiE9shift_reg_44 <= p_ZZ13fir_optimizedPiiE9shift_reg_43;
                p_ZZ13fir_optimizedPiiE9shift_reg_45 <= p_ZZ13fir_optimizedPiiE9shift_reg_44;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln49_10_fu_740_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_2) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_42));
    add_ln49_11_fu_746_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_1) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_43));
    add_ln49_12_fu_752_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_45) + unsigned(input_r));
    add_ln49_13_fu_758_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_44));
    add_ln49_14_fu_794_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_21) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_23));
    add_ln49_15_fu_800_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_20) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_24));
    add_ln49_16_fu_806_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_19) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_25));
    add_ln49_17_fu_812_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_18) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_26));
    add_ln49_18_fu_818_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_17) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_27));
    add_ln49_19_fu_824_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_16) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_28));
    add_ln49_1_fu_686_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_11) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_33));
    add_ln49_20_fu_830_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_15) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_29));
    add_ln49_21_fu_836_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_14) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_30));
    add_ln49_22_fu_842_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_13) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_31));
    add_ln49_23_fu_1180_p2 <= std_logic_vector(unsigned(add_ln49_54_reg_1449_pp0_iter1_reg) + unsigned(add_ln49_52_reg_1469));
    add_ln49_24_fu_1019_p2 <= std_logic_vector(unsigned(sub_ln49_16_reg_1454) + unsigned(sub_ln49_17_fu_1013_p2));
    add_ln49_25_fu_1024_p2 <= std_logic_vector(unsigned(add_ln49_24_fu_1019_p2) + unsigned(sub_ln49_14_fu_997_p2));
    add_ln49_26_fu_1184_p2 <= std_logic_vector(unsigned(add_ln49_25_reg_1474) + unsigned(add_ln49_23_fu_1180_p2));
    add_ln49_27_fu_1236_p2 <= std_logic_vector(unsigned(sub_ln49_19_fu_1230_p2) + unsigned(mul_ln49_7_reg_1524));
    add_ln49_28_fu_1278_p2 <= std_logic_vector(unsigned(add_ln49_27_reg_1559) + unsigned(mul_ln49_6_reg_1554));
    add_ln49_29_fu_1241_p2 <= std_logic_vector(unsigned(sub_ln49_21_reg_1534) + unsigned(mul_ln49_reg_1479));
    add_ln49_2_fu_692_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_10) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_34));
    add_ln49_30_fu_1245_p2 <= std_logic_vector(unsigned(add_ln49_29_fu_1241_p2) + unsigned(mul_ln49_8_reg_1529));
    add_ln49_31_fu_1282_p2 <= std_logic_vector(unsigned(add_ln49_30_reg_1564) + unsigned(add_ln49_28_fu_1278_p2));
    add_ln49_32_fu_1305_p2 <= std_logic_vector(unsigned(add_ln49_31_reg_1589_pp0_iter5_reg) + unsigned(add_ln49_26_reg_1539_pp0_iter5_reg));
    add_ln49_33_fu_1189_p2 <= std_logic_vector(unsigned(add_ln49_45_fu_1078_p2) + unsigned(sub_ln49_5_reg_1459));
    add_ln49_34_fu_1250_p2 <= std_logic_vector(unsigned(add_ln49_33_reg_1544) + unsigned(add_ln49_44_fu_1194_p2));
    add_ln49_35_fu_1255_p2 <= std_logic_vector(unsigned(mul_ln49_1_reg_1489) + unsigned(mul_ln49_2_reg_1494));
    add_ln49_36_fu_1259_p2 <= std_logic_vector(unsigned(add_ln49_35_fu_1255_p2) + unsigned(sub_ln49_6_fu_1208_p2));
    add_ln49_37_fu_1296_p2 <= std_logic_vector(unsigned(add_ln49_36_reg_1574_pp0_iter4_reg) + unsigned(add_ln49_34_reg_1569_pp0_iter4_reg));
    add_ln49_38_fu_1265_p2 <= std_logic_vector(unsigned(mul_ln49_4_reg_1499) + unsigned(mul_ln49_5_reg_1504));
    add_ln49_39_fu_1287_p2 <= std_logic_vector(unsigned(add_ln49_38_reg_1579) + unsigned(mul_ln49_3_reg_1549));
    add_ln49_3_fu_698_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_9) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_35));
    add_ln49_40_fu_1269_p2 <= std_logic_vector(unsigned(add_ln49_50_reg_1514) + unsigned(add_ln49_53_reg_1519));
    add_ln49_41_fu_1273_p2 <= std_logic_vector(unsigned(add_ln49_40_fu_1269_p2) + unsigned(sub_ln49_8_reg_1509));
    add_ln49_42_fu_1291_p2 <= std_logic_vector(unsigned(add_ln49_41_reg_1584) + unsigned(add_ln49_39_fu_1287_p2));
    add_ln49_43_fu_1300_p2 <= std_logic_vector(unsigned(add_ln49_42_reg_1594) + unsigned(add_ln49_37_fu_1296_p2));
    add_ln49_44_fu_1194_p2 <= std_logic_vector(unsigned(sub_ln49_2_reg_1484) + unsigned(add_ln49_1_reg_1320_pp0_iter2_reg));
    add_ln49_45_fu_1078_p2 <= std_logic_vector(unsigned(shl_ln49_4_fu_1068_p2) + unsigned(shl_ln49_5_fu_1073_p2));
    add_ln49_46_fu_901_p2 <= std_logic_vector(unsigned(sub_ln49_4_reg_1405) + unsigned(shl_ln49_9_fu_896_p2));
    add_ln49_47_fu_938_p2 <= std_logic_vector(unsigned(sub_ln49_7_fu_927_p2) + unsigned(shl_ln49_15_fu_933_p2));
    add_ln49_48_fu_949_p2 <= std_logic_vector(unsigned(add_ln49_47_fu_938_p2) + unsigned(shl_ln49_16_fu_944_p2));
    add_ln49_49_fu_1089_p2 <= std_logic_vector(unsigned(add_ln49_48_reg_1464) + unsigned(shl_ln49_17_fu_1084_p2));
    add_ln49_4_fu_704_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_8) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_36));
    add_ln49_50_fu_1120_p2 <= std_logic_vector(unsigned(sub_ln49_9_fu_1109_p2) + unsigned(shl_ln49_20_fu_1115_p2));
    add_ln49_51_fu_976_p2 <= std_logic_vector(unsigned(sub_ln49_10_fu_965_p2) + unsigned(shl_ln49_23_fu_971_p2));
    add_ln49_52_fu_982_p2 <= std_logic_vector(unsigned(add_ln49_51_fu_976_p2) + unsigned(add_ln49_12_reg_1389));
    add_ln49_53_fu_1153_p2 <= std_logic_vector(unsigned(sub_ln49_12_fu_1147_p2) + unsigned(add_ln49_13_reg_1397_pp0_iter1_reg));
    add_ln49_54_fu_866_p2 <= std_logic_vector(unsigned(sub_ln49_13_fu_860_p2) + unsigned(add_ln49_14_fu_794_p2));
    add_ln49_5_fu_710_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_7) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_37));
    add_ln49_6_fu_716_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_6) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_38));
    add_ln49_7_fu_722_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_5) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_39));
    add_ln49_8_fu_728_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_4) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_40));
    add_ln49_9_fu_734_p2 <= std_logic_vector(unsigned(fir_optimized_int_int_shift_reg_3) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_41));
    add_ln49_fu_680_p2 <= std_logic_vector(unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_12) + unsigned(p_ZZ13fir_optimizedPiiE9shift_reg_32));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_idle_pp0_0to5 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_175_p1 <= ap_const_lv32_FFFFFF0A(9 - 1 downto 0);
    grp_fu_180_p1 <= ap_const_lv32_FFFFFF8E(8 - 1 downto 0);
    grp_fu_185_p1 <= ap_const_lv32_FFFFFC78(11 - 1 downto 0);
    grp_fu_190_p1 <= ap_const_lv32_FFFFFAC3(12 - 1 downto 0);
    grp_fu_195_p1 <= ap_const_lv32_FFFFFED9(10 - 1 downto 0);
    grp_fu_200_p1 <= ap_const_lv32_FFFFFE3B(10 - 1 downto 0);
    grp_fu_205_p1 <= ap_const_lv32_FFFFFDC7(11 - 1 downto 0);
    grp_fu_210_p1 <= ap_const_lv32_FFFFFA50(12 - 1 downto 0);
    grp_fu_215_p1 <= ap_const_lv32_FFFFFFAC(8 - 1 downto 0);
    output_r <= std_logic_vector(unsigned(add_ln49_43_reg_1599) + unsigned(add_ln49_32_fu_1305_p2));

    output_r_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            output_r_ap_vld <= ap_const_logic_1;
        else 
            output_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln49_10_fu_906_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_3_reg_1335),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln49_11_fu_1198_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_4_reg_1341_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_9(31-1 downto 0)))));
    shl_ln49_12_fu_1203_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_4_reg_1341_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln49_13_fu_917_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_10_reg_1372),to_integer(unsigned('0' & ap_const_lv32_B(31-1 downto 0)))));
    shl_ln49_14_fu_922_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_10_reg_1372),to_integer(unsigned('0' & ap_const_lv32_9(31-1 downto 0)))));
    shl_ln49_15_fu_933_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_10_reg_1372),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln49_16_fu_944_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_10_reg_1372),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln49_17_fu_1084_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_10_reg_1372_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln49_18_fu_1099_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_11_reg_1382_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_C(31-1 downto 0)))));
    shl_ln49_19_fu_1104_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_11_reg_1382_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    shl_ln49_1_fu_1035_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_1_reg_1320_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln49_20_fu_1115_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_11_reg_1382_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln49_21_fu_955_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_12_reg_1389),to_integer(unsigned('0' & ap_const_lv32_D(31-1 downto 0)))));
    shl_ln49_22_fu_960_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_12_reg_1389),to_integer(unsigned('0' & ap_const_lv32_A(31-1 downto 0)))));
    shl_ln49_23_fu_971_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_12_reg_1389),to_integer(unsigned('0' & ap_const_lv32_8(31-1 downto 0)))));
    shl_ln49_24_fu_1126_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_13_reg_1397_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_D(31-1 downto 0)))));
    shl_ln49_25_fu_1131_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_13_reg_1397_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_B(31-1 downto 0)))));
    shl_ln49_26_fu_1142_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_13_reg_1397_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln49_27_fu_848_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_14_fu_794_p2),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    shl_ln49_28_fu_854_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_14_fu_794_p2),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln49_29_fu_987_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_15_reg_1410),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln49_2_fu_1046_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_1_reg_1320_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln49_30_fu_992_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_15_reg_1410),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln49_31_fu_872_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_16_fu_806_p2),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln49_32_fu_878_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_16_fu_806_p2),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln49_33_fu_1003_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_17_reg_1416),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    shl_ln49_34_fu_1008_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_17_reg_1416),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln49_35_fu_1214_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_19_reg_1427_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_8(31-1 downto 0)))));
    shl_ln49_36_fu_1225_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_19_reg_1427_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln49_37_fu_1158_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_22_reg_1443_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_9(31-1 downto 0)))));
    shl_ln49_38_fu_1169_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_22_reg_1443_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln49_3_fu_1057_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_1_reg_1320_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln49_4_fu_1068_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_2_reg_1329_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_9(31-1 downto 0)))));
    shl_ln49_5_fu_1073_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_2_reg_1329_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln49_6_fu_764_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_3_fu_698_p2),to_integer(unsigned('0' & ap_const_lv32_A(31-1 downto 0)))));
    shl_ln49_7_fu_770_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_3_fu_698_p2),to_integer(unsigned('0' & ap_const_lv32_8(31-1 downto 0)))));
    shl_ln49_8_fu_782_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_3_fu_698_p2),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    shl_ln49_9_fu_896_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_3_reg_1335),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln49_fu_1030_p2 <= std_logic_vector(shift_left(unsigned(add_ln49_1_reg_1320_pp0_iter1_reg),to_integer(unsigned('0' & ap_const_lv32_8(31-1 downto 0)))));
    sub_ln49_10_fu_965_p2 <= std_logic_vector(unsigned(shl_ln49_21_fu_955_p2) - unsigned(shl_ln49_22_fu_960_p2));
    sub_ln49_11_fu_1136_p2 <= std_logic_vector(unsigned(shl_ln49_24_fu_1126_p2) - unsigned(shl_ln49_25_fu_1131_p2));
    sub_ln49_12_fu_1147_p2 <= std_logic_vector(unsigned(sub_ln49_11_fu_1136_p2) - unsigned(shl_ln49_26_fu_1142_p2));
    sub_ln49_13_fu_860_p2 <= std_logic_vector(unsigned(shl_ln49_27_fu_848_p2) - unsigned(shl_ln49_28_fu_854_p2));
    sub_ln49_14_fu_997_p2 <= std_logic_vector(unsigned(shl_ln49_29_fu_987_p2) - unsigned(shl_ln49_30_fu_992_p2));
    sub_ln49_15_fu_884_p2 <= std_logic_vector(unsigned(shl_ln49_31_fu_872_p2) - unsigned(shl_ln49_32_fu_878_p2));
    sub_ln49_16_fu_890_p2 <= std_logic_vector(unsigned(sub_ln49_15_fu_884_p2) - unsigned(add_ln49_16_fu_806_p2));
    sub_ln49_17_fu_1013_p2 <= std_logic_vector(unsigned(shl_ln49_33_fu_1003_p2) - unsigned(shl_ln49_34_fu_1008_p2));
    sub_ln49_18_fu_1219_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln49_35_fu_1214_p2));
    sub_ln49_19_fu_1230_p2 <= std_logic_vector(unsigned(sub_ln49_18_fu_1219_p2) - unsigned(shl_ln49_36_fu_1225_p2));
    sub_ln49_1_fu_1051_p2 <= std_logic_vector(unsigned(sub_ln49_fu_1040_p2) - unsigned(shl_ln49_2_fu_1046_p2));
    sub_ln49_20_fu_1163_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln49_37_fu_1158_p2));
    sub_ln49_21_fu_1174_p2 <= std_logic_vector(unsigned(sub_ln49_20_fu_1163_p2) - unsigned(shl_ln49_38_fu_1169_p2));
    sub_ln49_2_fu_1062_p2 <= std_logic_vector(unsigned(sub_ln49_1_fu_1051_p2) - unsigned(shl_ln49_3_fu_1057_p2));
    sub_ln49_3_fu_776_p2 <= std_logic_vector(unsigned(shl_ln49_6_fu_764_p2) - unsigned(shl_ln49_7_fu_770_p2));
    sub_ln49_4_fu_788_p2 <= std_logic_vector(unsigned(sub_ln49_3_fu_776_p2) - unsigned(shl_ln49_8_fu_782_p2));
    sub_ln49_5_fu_911_p2 <= std_logic_vector(unsigned(add_ln49_46_fu_901_p2) - unsigned(shl_ln49_10_fu_906_p2));
    sub_ln49_6_fu_1208_p2 <= std_logic_vector(unsigned(shl_ln49_11_fu_1198_p2) - unsigned(shl_ln49_12_fu_1203_p2));
    sub_ln49_7_fu_927_p2 <= std_logic_vector(unsigned(shl_ln49_13_fu_917_p2) - unsigned(shl_ln49_14_fu_922_p2));
    sub_ln49_8_fu_1094_p2 <= std_logic_vector(unsigned(add_ln49_49_fu_1089_p2) - unsigned(add_ln49_10_reg_1372_pp0_iter1_reg));
    sub_ln49_9_fu_1109_p2 <= std_logic_vector(unsigned(shl_ln49_18_fu_1099_p2) - unsigned(shl_ln49_19_fu_1104_p2));
    sub_ln49_fu_1040_p2 <= std_logic_vector(unsigned(shl_ln49_fu_1030_p2) - unsigned(shl_ln49_1_fu_1035_p2));
end behav;
